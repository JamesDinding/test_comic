name: build-xiaojun_dev

on:
  push:
    branches: [ xiaojun_dev ]
env:
  IMAGE_TAG: v1.0
  K8S_DEPLOYMENT: deploy-nsmh-web-preact
  K8S_CONTAINER: container-nsmh-web-preact
  K8S_NAMESPACE: cashier

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}-${{ env.IMAGE_TAG }}:${{ github.sha }}


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: deploy to cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
          IMAGE: ghcr.io/${{ github.repository }}-${{ env.IMAGE_TAG }}:${{ github.sha }}
        with:
          args: set image deployment/${{ env.K8S_DEPLOYMENT}} ${{ env.K8S_CONTAINER }}=$IMAGE -n ${{ env.K8S_NAMESPACE}}

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: '#api-notify'
          slack-message: "@U02Q10YJE3Z GitHub build result: ${{ job.status }}\n${{ github.repository }}-${{ env.IMAGE_TAG }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


